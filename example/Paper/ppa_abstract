[10]init -> idle_3[b_in,]
Assumptions:
Commitments:
	cnt = 0
	msg.data = 0
	msg.status = in_frame
	s_out.sig = false


[11]frame_data_0[b_in,] -> frame_data_0[b_in,]
Assumptions:
	b_in.sync()
	b_in.sync()
Commitments:
	cnt = cnt
	msg.data = b_in.sig[data]
	msg.status = b_in.sig[status]
	s_out.sig = s_out.sig

[20]frame_data_0[b_in,] -> frame_data_0[b_in,]
Assumptions:
	not((cnt == 0))
	not(b_in.sync())
Commitments:
	cnt = (-1 + cnt)
	m_out.sig = msg.data
	msg.data = msg.data
	msg.status = msg.status
	s_out.sig = s_out.sig

[21]frame_data_0[b_in,] -> idle_3[b_in,]
Assumptions:
	(cnt == 0)
	not(b_in.sync())
Commitments:
	cnt = (-1 + cnt)
	m_out.sig = msg.data
	msg.data = msg.data
	msg.status = msg.status
	s_out.sig = false


[15]frame_start_2[m_out,] -> frame_data_0[b_in,]
Assumptions:
	(cnt == 1)
Commitments:
	cnt = 15
	msg.data = msg.data
	msg.status = msg.status
	s_out.sig = s_out.sig

[16]frame_start_2[m_out,] -> frame_start_2[m_out,]
Assumptions:
	not((cnt == 1))
Commitments:
	cnt = (-1 + cnt)
	m_out.sig = (-1 + cnt)
	msg.data = msg.data
	msg.status = msg.status
	s_out.sig = s_out.sig


[17]idle_3[b_in,] -> frame_start_2[m_out,]
Assumptions:
	(b_in.sig[status] == in_frame)
	b_in.sync()
Commitments:
	cnt = 3
	m_out.sig = 3
	msg.data = b_in.sig[data]
	msg.status = b_in.sig[status]
	s_out.sig = true

[18]wait_idle_3[b_in,]
Assumptions:
	not(b_in.sync())
Commitments:
	cnt = cnt
	msg.data = msg.data
	msg.status = msg.status
	s_out.sig = s_out.sig

[19]idle_3[b_in,] -> idle_3[b_in,]
Assumptions:
	not((b_in.sig[status] == in_frame))
	b_in.sync()
Commitments:
	cnt = cnt
	msg.data = b_in.sig[data]
	msg.status = b_in.sig[status]
	s_out.sig = false