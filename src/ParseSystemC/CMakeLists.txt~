project(SCAM C CXX)
cmake_minimum_required(VERSION 2.8)
MESSAGE(STATUS "Building SCAM")

#OPTIONS
add_compile_options(-D__STDC_CONSTANT_MACROS)
add_compile_options(-D__STDC_LIMIT_MACROS)
#add_compile_options(-g)

#VARIABLES
set(CMAKE_MODULE_LINKER_FLAGS "-L/usr/lib -L/usr/local/lib   -rt -dl -tinfo -pthread -z")

#DIRECTORIES
set(SOURCE_FILES main.cpp)

set(GLOBAL_FILES
		${CMAKE_SOURCE_DIR}/src/global/ErrorMsg.cpp
		${CMAKE_SOURCE_DIR}/src/global/DataTypes.cpp
		${CMAKE_SOURCE_DIR}/src/global/CommandLineParameter.cpp
		${CMAKE_SOURCE_DIR}/src/global/ModelGlobal.h
		${CMAKE_SOURCE_DIR}/src/global/CommandlineControl.cpp
		${CMAKE_SOURCE_DIR}/src/global/ExprTranslator.cpp
		${CMAKE_SOURCE_DIR}/example/Interfaces/Interfaces.h

		)


add_executable(SCAM ${SOURCE_FILES} ${GLOBAL_FILES})

target_link_libraries(SCAM ITLSynth)
target_link_libraries(SCAM VHDLSynth)
target_link_libraries(SCAM OperationsToDot)
target_link_libraries(SCAM PromelaSynth)
target_link_libraries(SCAM ParseSystemC)
target_link_libraries(SCAM Model)
target_link_libraries(SCAM PropertySynth)
target_link_libraries(SCAM Stmts)


set(LLVM_LIBS
		LLVMInstrumentation
		LLVMIRReader
		LLVMAsmParser
		LLVMDebugInfo
		LLVMOption
		LLVMLTO
		LLVMLinker
		LLVMipo
		LLVMVectorize
		LLVMBitWriter
		LLVMBitReader
		LLVMTableGen
		LLVMXCoreDisassembler
		LLVMXCoreCodeGen
		LLVMXCoreDesc
		LLVMXCoreInfo
		LLVMXCoreAsmPrinter
		LLVMX86Disassembler
		LLVMX86AsmParser
		LLVMX86CodeGen
		LLVMX86Desc
		LLVMX86Info
		LLVMX86AsmPrinter
		LLVMX86Utils
		LLVMSystemZDisassembler
		LLVMSystemZCodeGen
		LLVMSystemZAsmParser
		LLVMSystemZDesc
		LLVMSystemZInfo
		LLVMSystemZAsmPrinter
		LLVMSparcCodeGen
		LLVMSparcDesc
		LLVMSparcInfo
		LLVMR600CodeGen
		LLVMR600Desc
		LLVMR600Info
		LLVMR600AsmPrinter
		LLVMPowerPCCodeGen
		LLVMPowerPCAsmParser
		LLVMPowerPCDesc
		LLVMPowerPCInfo
		LLVMPowerPCAsmPrinter
		LLVMNVPTXCodeGen
		LLVMNVPTXDesc
		LLVMNVPTXInfo
		LLVMNVPTXAsmPrinter
		LLVMMSP430CodeGen
		LLVMMSP430Desc
		LLVMMSP430Info
		LLVMMSP430AsmPrinter
		LLVMMipsDisassembler
		LLVMMipsCodeGen
		LLVMMipsAsmParser
		LLVMMipsDesc
		LLVMMipsInfo
		LLVMMipsAsmPrinter
		LLVMHexagonCodeGen
		LLVMHexagonAsmPrinter
		LLVMHexagonDesc
		LLVMHexagonInfo
		LLVMCppBackendCodeGen
		LLVMCppBackendInfo
		LLVMARMDisassembler
		LLVMARMCodeGen
		LLVMARMAsmParser
		LLVMARMDesc
		LLVMARMInfo
		LLVMARMAsmPrinter
		LLVMAArch64Disassembler
		LLVMAArch64CodeGen
		LLVMSelectionDAG
		LLVMAsmPrinter
		LLVMAArch64AsmParser
		LLVMAArch64Desc
		LLVMAArch64Info
		LLVMAArch64AsmPrinter
		LLVMAArch64Utils
		LLVMMCDisassembler
		LLVMMCParser
		LLVMInterpreter
		LLVMMCJIT
		LLVMJIT
		LLVMCodeGen
		LLVMObjCARCOpts
		LLVMScalarOpts
		LLVMInstCombine
		LLVMTransformUtils
		LLVMipa
		LLVMAnalysis
		LLVMRuntimeDyld
		LLVMExecutionEngine
		LLVMTarget
		LLVMMC
		LLVMObject
		LLVMCore
		LLVMSupport)

set(CLANG_LIBS
		clangTooling
		clangFrontendTool
		clangFrontend
		clangDriver
		clangSerialization
		clangCodeGen
		clangParse
		clangSema
		clangStaticAnalyzerFrontend
		clangStaticAnalyzerCheckers
		clangStaticAnalyzerCore
		clangAnalysis
		clangARCMigrate
		clangRewriteFrontend
		clangRewriteCore
		clangEdit
		clangAST
		clangLex
		clangBasic
		clangASTMatchers)

set(OTHER_LIBS  z3)


set(LLVM_LD_FLAGS
		-lrt
		-ldl
		-ltinfo
		-lpthread
		-lz)

foreach (clang_lib ${CLANG_LIBS})
	target_link_libraries(SCAM ${clang_lib})
endforeach ()

foreach (other_lib ${OTHER_LIBS})
	target_link_libraries(SCAM ${other_lib})
endforeach ()

foreach (llvm_lib ${LLVM_LIBS})
	target_link_libraries(SCAM ${llvm_lib})
endforeach ()

foreach (ld_flag ${LLVM_LD_FLAGS})
	target_link_libraries(SCAM ${ld_flag})
endforeach ()




add_library (ParseSystemC
		ModelFactory.cpp
		PluginAction.h
		CFG/CFGNode.cpp
		CFG/CFGFactory.cpp
		CFG/FlattenIf.cpp
		CFG/SectionFactory.cpp
		CFG/FindEndNode.cpp
		CFG/EnumartePathsVisitor.cpp
		CFG/FlattenWhile.cpp
		FindModules.cpp
		FindSCMain.cpp
		FindPorts.cpp
		FindCall.cpp
		FindNetlist.cpp
		FindInterface.cpp
		FindProcess.cpp
		FindVariables.cpp
		FindDataFlow.cpp
		FindInitalValues.cpp
		FindSections.cpp
		FindNewDatatype.cpp
		)



